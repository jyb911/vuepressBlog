{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{414:function(v,t,_){\"use strict\";_.r(t);var r=_(56),d=Object(r.a)({},(function(){var v=this,t=v.$createElement,_=v._self._c||t;return _(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":v.$parent.slotKey}},[_(\"h2\",{attrs:{id:\"基础类型\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#基础类型\"}},[v._v(\"#\")]),v._v(\" 基础类型\")]),v._v(\" \"),_(\"table\",[_(\"thead\",[_(\"tr\",[_(\"th\",[v._v(\"数据类型\")]),v._v(\" \"),_(\"th\",[v._v(\"关键字\")]),v._v(\" \"),_(\"th\",[v._v(\"描述\")])])]),v._v(\" \"),_(\"tbody\",[_(\"tr\",[_(\"td\",[v._v(\"任意类型\")]),v._v(\" \"),_(\"td\",[v._v(\"any\")]),v._v(\" \"),_(\"td\",[v._v(\"声明为any的变量可以赋予任意类型的值\")])]),v._v(\" \"),_(\"tr\",[_(\"td\",[v._v(\"数字类型\")]),v._v(\" \"),_(\"td\",[v._v(\"number\")]),v._v(\" \"),_(\"td\",[v._v(\"双精度64位浮点值\")])]),v._v(\" \"),_(\"tr\",[_(\"td\",[v._v(\"字符串类型\")]),v._v(\" \"),_(\"td\",[v._v(\"string\")]),v._v(\" \"),_(\"td\")]),v._v(\" \"),_(\"tr\",[_(\"td\",[v._v(\"布尔类型\")]),v._v(\" \"),_(\"td\",[v._v(\"boolean\")]),v._v(\" \"),_(\"td\")]),v._v(\" \"),_(\"tr\",[_(\"td\",[v._v(\"数组类型\")]),v._v(\" \"),_(\"td\"),v._v(\" \"),_(\"td\",[v._v(\"元素类型后加[ ] 或使用数组泛型Array\"),_(\"number\")],1)]),v._v(\" \"),_(\"tr\",[_(\"td\",[v._v(\"元组\")]),v._v(\" \"),_(\"td\"),v._v(\" \"),_(\"td\",[v._v(\"表示已知元素数量和类型的数组，对应位置类型相同\")])]),v._v(\" \"),_(\"tr\",[_(\"td\",[v._v(\"枚举\")]),v._v(\" \"),_(\"td\",[v._v(\"enum\")]),v._v(\" \"),_(\"td\",[v._v(\"定义数值集合\"),_(\"br\"),v._v(\"enum Color {Red, Green, Blue};\"),_(\"br\"),v._v(\" let c: Color = Color.Blue; \"),_(\"br\"),v._v(\"console.log(c);    // 输出 2\")])]),v._v(\" \"),_(\"tr\",[_(\"td\",[v._v(\"void\")]),v._v(\" \"),_(\"td\",[v._v(\"void\")]),v._v(\" \"),_(\"td\",[v._v(\"标识方法返回值类型为空\")])]),v._v(\" \"),_(\"tr\",[_(\"td\",[v._v(\"null\")]),v._v(\" \"),_(\"td\",[v._v(\"null\")]),v._v(\" \"),_(\"td\")]),v._v(\" \"),_(\"tr\",[_(\"td\",[v._v(\"undefined\")]),v._v(\" \"),_(\"td\",[v._v(\"undefined\")]),v._v(\" \"),_(\"td\")]),v._v(\" \"),_(\"tr\",[_(\"td\",[v._v(\"never\")]),v._v(\" \"),_(\"td\",[v._v(\"never\")]),v._v(\" \"),_(\"td\",[v._v(\"其他类型的子类型，代表从不会出现的值\")])])])]),v._v(\" \"),_(\"h2\",{attrs:{id:\"变量声明\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#变量声明\"}},[v._v(\"#\")]),v._v(\" 变量声明\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"变量使用前必须声明\")]),v._v(\" \"),_(\"li\",[v._v(\"变量声明时没有指定类型，编译器通过类型推断判断变量的数据类型并设置，之后不可变\")])]),v._v(\" \"),_(\"h2\",{attrs:{id:\"函数\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#函数\"}},[v._v(\"#\")]),v._v(\" 函数\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"指定返回值类型\")]),v._v(\" \"),_(\"li\",[v._v(\"指定传入参数个数和类型，必须对应，\")]),v._v(\" \"),_(\"li\",[v._v(\"可选参数?\")]),v._v(\" \"),_(\"li\",[v._v(\"默认参数\")]),v._v(\" \"),_(\"li\",[v._v(\"剩余参数\")])]),v._v(\" \"),_(\"h3\",{attrs:{id:\"函数重载\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#函数重载\"}},[v._v(\"#\")]),v._v(\" 函数重载\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"函数名相同，参数类型、个数，返回值类型至少一个不同\")])])])}),[],!1,null,null,null);t.default=d.exports}}]);","extractedComments":[]}